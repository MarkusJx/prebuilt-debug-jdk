FROM debian:{{ VERSION }} as build
RUN export DEBIAN_FRONTEND=noninteractive; \
    export DEBCONF_NONINTERACTIVE_SEEN=true; \
    apt-get update && apt-get -y upgrade && \
    apt-get install -y build-essential autoconf git zip unzip file libfreetype6-dev \
    libcups2-dev libx11-dev libxext-dev libxrender-dev libxrandr-dev libxtst-dev libxt-dev \
    libasound2-dev libffi-dev openjdk-{{ BOOT_JDK_VERSION }}-jdk libfontconfig1-dev clang

WORKDIR /app
RUN git clone https://github.com/openjdk/jdk -b jdk-{{ JDK_VERSION }}
WORKDIR /app/jdk

RUN bash configure --with-debug-level=fastdebug --enable-warnings-as-errors=no \
    --build=x86_64-unknown-linux-gnu --with-toolchain-type=clang
RUN make images
RUN mkdir out && mv build/linux-*/jdk jdk

FROM debian:{{ VERSION }}-slim
RUN apt update && apt upgrade -y && apt install -y curl build-essential unzip libclang-dev git clang &&\
    curl https://sh.rustup.rs -sSf | sh -s -- -y && PATH="$PATH:/root/.cargo/bin"\
    rustup default nightly && PATH="$PATH:/root/.cargo/bin"\
    rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu

COPY --from=build /app/jdk/jdk /jdk

ENV JAVA_HOME=/jdk
ENV RUSTFLAGS="-Clinker=clang -Zsanitizer=address"
ENV RUSTDOCFLAGS="-Clinker=clang -Zsanitizer=address"
ENV ASAN_OPTIONS="detect_leaks=0"
ENV PATH="$PATH:/root/.cargo/bin"

WORKDIR /app
CMD [ "/bin/bash" ]